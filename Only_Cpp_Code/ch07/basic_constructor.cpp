// 생성자 정의하기

/**
 * 생성자와 소멸자
 * 
 * 생성자와 소멸자는 객체를 생성하고 소멸할 때 강제로 호출하게 해서 실수를 방지하거나 
 * 다른 개발자가 사용할 때도 반드시 처리해야 할 일들을 알 수 있게 한다. 
 * 
 * 생성자
 * 
 * 객체가 생성될 때마다 객체 내부나 외부에 초기화해야 할 속성들이 있다. 초기화하는 작업은
 * 별도의 함수로 만들어 객체 생성 후에 호출하면 된다. 하지만 프로그램에는 많은 객체가 
 * 사용되는데 객체를 생성할 때마다 초기화 함수를 별도로 호출해야 한다면 개발자가 놓칠 수 
 * 있다. 이때 생성자를 사용한다. 
 * 
 * 생성자(constructor)는 객체가 생성된 직후에 자동으로 호출되는 함수이다. 이러한 특징을
 * 이용해 생성자에게 속성을 초기화하는 등 객체를 사용할 준비를 한다. 생성자 함수는 클래스와
 * 같은 이름으로 선언한다. 
 * 
 * 클래스_이름()
 * 
 * 다음은 character 클래스의 생성자를 정의한 코드이다. main 함수에서 character 클래스로 player라는
 * 객체를 생성할 때 character() 생성자가 자동으로 호출된다. 코드에서는 생성자 호출을 알려 주는 
 * 메시지를 출력했지만, 주로 멤버 변수를 초기화하는 코드를 작성한다. 
 */

#include <iostream>

using namespace std;


class character {
public:
    character() {
        cout << "character 클래스 생성자" << endl;
    };
};


int main() {
    character player;   // main에서 character 클래스로 player라는 객체를 생성할 때 character() 생성자가 자동으로 호출됨
    return 0;
}

/**
 * 실행 결과
 * 
 * character 클래스 생성자
 */
