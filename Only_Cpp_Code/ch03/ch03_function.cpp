// 덧셈을 수행하는 함수를 작성하고 호출하기

/**
 * 함수와 구조체
 * 
 * 함수에 관해 알아보도록 하자. C++ 언어에서는 파일 입출력, 문자열 처리, 각종 산술 연산 등을
 * 수행할 수 있는 유용하고 다양한 함수를 모아 C++ 표준 라이브러리 형태로 제공한다. 이 함수들은
 * 단순히 이용하는 것뿐만 아니라, 필요에 따라 재정의해서 사용할 수도 있다. 
 * 
 * 반복해서 수행되는 코드를 함수로 만들면 재활용할 수 있으며 복잡한 기능도 구조화되어 효율적으로
 * 관리할 수 있다. 이와 더불어 하나 이상의 변수를 그룹화하는 구조체도 살펴보고, 함수와 함께 
 * 활용하는 법도 익혀 보겠다. 
 */

/** 함수 만들기 
 * 
 * 함수는 특정 작업을 수행하는 코드 집합으로 정의할 수 있다. 함수의 기본 구성은 다음과 같다. 
 * 
 * => 반환_형식 함수_이름 (매개변수1, 매개변수2) { 함수 몸체 };
 * 
 * 함수 선언에는 크게 4 가지의 필수 요소가 있다. 
 * 
 * 1. 반환 형식: 함수가 반환할 값의 자료형이다. 반환할 값이 없을 때는 void로 표기하다. 
 * 2. 함수 이름: 함수를 호출할 때 사용할 이름이다. 함수의 이름은 문자나 밑줄(_)로 시작하며, 
 * 		숫자나 공백으로 시작할 수는 없다. 
 * 3. 매개변수: 함수가 호출될 때 전달받은 값을 저장하는 변수로, 함수 내부에서만 사용할 수 있는
 * 		지역 변수이다. 전달받을 값이 없을 때는 비워 두거나, void로 매개변수가 없음을 표기할 수 있다. 
 * 4. 함수 몸체: 함수의 기능을 정의하는 부분이다.  
 */

#include <iostream>
using namespace std;

int add(int _x, int _y)	// add 함수 정의 
{
	int result = _x + _y;
	return result;
}

int main() {

	int add_result = add(2, 3);	// add 함수 호출
	cout << "add 함수 결과: " << add_result << endl;	// 함수 실행 결과 

	return 0;
}

// add 함수 결과: 5