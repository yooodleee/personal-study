// static 키워드로 지역 변수를 정적 변수로 만들기

/**
 * static과 const는 C++ 언어에서 자주 혼동하는 키워드다. 여러 프로그래밍 언어에서 등장하는 만큼 
 * 잘 정리해두면 다른 언어를 배울 때도 도움이 될 것이다. 
 * 
 * 정적 변수 선언하기 - static
 * 
 * static 키워드를 알아보기 전에 먼저 지역 변수와 전역 변수의 차이를 간단하게 복습해보기를 바란다. 
 * 지역 변수는 선언된 지점에서 생성되고 해당 블록이 끝나면 소멸한다. 이러한 특징을 자동 지속(atuo duration)
 * 이라고 한다. 
 * 
 * - 지역 변수(local variable): 
 * 		함수 내부에 선언된 변수로, 해당 블록 내에서만 효력이 있다. 
 * - 전역 변수(global variable):
 * 		전역 범위에 선언된 변수로, 해당 파일 전체에서 효력이 있다. 
 * 
 * 그런데 지역 변수에 static 키워드를 사용하면 자동 지속(auto duration)에서 정적 지속(static duration)으로
 * 변수의 유효 범위가 바뀐다. 즉, static 키워드는 지역 변수를 정적 변수(static variable)로 바꾼다. 이렇게
 * 생성된 정적 변수는 선언된 블록이 끝나더라도 값을 유지한다. 
 */

#include <iostream>
using namespace std;


void func() {

	int a = 10;
	static int b = 10;

	a++;
	b++;

	cout << "a : " << a << " , b : " << b << endl;
}

int main()
{
	func();
	func();
	func();
	func();
	func();

	return 0;
}

/*
a : 11 , b : 11
a : 11 , b : 12
a : 11 , b : 13
a : 11 , b : 14
a : 11 , b : 15
*/

/**
 * func 함수에서 a, b 변수를 만들고 1씩 증가시킨다. 그리고 main에서는 func 함수를 연속으로 5번 호출했다. 
 * 실행결과를 살펴보면, a, b를 똑같이 1씩 증가시켰는데 a는 항상 같은 값(11)이고 b는 계속 증가했다. a, b 변수의 
 * 차이는 static이라는 키워드 하나 차이뿐인데, 실행 결과가 서로 다르다. 
 * 
 * int a = 10;
 * static int b = 10;
 * 
 * a는 지역 변수이므로 func 함수가 호출될 때 매번 새로 생성되고, func 함수가 종료됨에 따라 사라진다.
 * 반면에 b는 static 키워드 때문에 정적 변수로 선언되었다. 따라서 func 함수가 종료되어도 사라지지 않는다. 
 * 결국 b는 func 함수가 호출된만큼 값이 누적된다. 
 * 
 * 그런데 static int b = 10; 코드를 보면 func 함수가 호출될 때마다 매번 10으로 초기화된다. 
 * 하지만 정적 변수는 func 함수가 처음 호출될 때 한 번만 초기화되며, 그 값은 프로그램이 종료할 때까지 지속된다. 
 * static으로 정적 변수를 선언할 때는 반드시 초기화해야 한다. 만약 초기화하지 않으면 컴파일러가 0으로 초기화한다.  
 */