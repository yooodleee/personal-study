// for 반복문

/**
 * for 문으로 반복하기
 * 
 * for 문은 반복 횟수를 정확히 제어해야 할 때 효과적으로 사용할 수 있다. 또한 초기회, 조건식, 증감식을 
 * 모두 한곳에서 관리하여 코드를 더 간결하게 작성할 수 있다. for 문은 while, do ~ while 문과는 조금 다른
 * 형태를 띤다. 
 * 
 * for (초기화; 조건식; 증감식)
 * {
 * 		// 반복 실행 코드 
 * }
 * 
 * 초기화: 반복이 시작되기 전에 한 번만 실행되며 변수를 선언하고 초기화한다. 
 * 조건식: 반복이 실행되기 전에 매번 평가된다. 참이면 반복이 실행되고 그렇지 않으면 종료한다. 
 * 증감식: 반복문 후에 실행되며 조건식에 사용된 변수를 업데이트한다. 
 */

#include <iostream>
using namespace std;


int main() {

	for (int count = 0; count < 5; count++) {
		cout << "count : " << count << endl;
	}

	return 0;
}

/*
count : 0
count : 1
count : 2
count : 3
count : 4
*/

/**
 * 예에서 for 문은 먼저 count 변수를 0으로 초기화하고 count < 5 식이 참이므로 count 값을
 * 출력하는 코드를 실행한다. 그리고 증감식으로 count 값을 1만큼 증가시킨다. 이어서 조건식과 
 * 실행문, 증감식을 반복해서 실행하다가 count < 5 식이 거짓이 되면 반복문을 종료한다. 
 * 
 * for 문은 초기화, 조건식, 증감식을 한 곳에서 파악할 수 있어 반복을 더 쉽게 이해하고 제어할
 * 수 있다. for 문의 장점을 요약하면 다음과 같다. 
 * 
 * 1. 간결한 구문
 * 2. 더 나은 반복 제어
 * 3. 배열 같은 데이터 구조에서 사용하기 쉬움
 * 4. 특정 횟수만큼 실행되는 반복을 더 쉽게 만들 수 있음
 * 5. 무한 반복 방지
 * 
 * for 문은 반복 횟수를 미리 알 수 있고 배열을 순회하거나 특정 범위의 갑셍 연속해서 접근할 때
 * 매우 유용하다. 반면에 while 문은 반복 횟수를 미리 알 수 없고 특정 조건이 충족되는 한 계속
 * 반복해야 할 때 유용하다. 
 */