// if를 활용한 조건 분기 

/**
 * 조건문으로 흐름 제어
 * 
 * if 문으로 분기하기 
 * 
 * 프로그램은 종종 특정한 조건에 따라 다르게 동작해야 할 때가 있다. 이럴 때에 조건문을 
 * 사용하면 프로그램의 실행 흐름을 제어할 수 있다. C와 C++ 언어에서는 조건에 따라 분기할
 * 때 if나 swtch 문을 사용한다. 둘은 다른 언어에서도 등장하는 기본 조건문이다. 
 * 
 * if 문의 동작 방식
 * 
 * if 조건문은 프로그램 내에서 특정 조건이 참일 때만 코드 블록을 실행하도록 하는 프로그래밍
 * 구문이다. if 문을 이용하면 다양한 상황 별로 다른 동작을 수행하도록 만들 수 있다. 
 * 
 * if 문 사용
 * if (조건식)
 * {
 * 		// 실행문 
 * }
 * 
 * 1. if 조건식이 참일 때 실행문 동작
 * 2. if 조건식이 거짓일 때 실행문 동작 
 * 
 * 조건이 참(true)이면 중괄호 {} 인의 코드 블록이 실행되고, 조건이 거짓(false)이면 해당 코드
 * 블록은 무시한다. 
 * 
 * // if 조건이 참일 때
 * int a = 5, b = 2;	
 * if (a > b)
 * {
 * 		// 실행문
 * }
 * 
 * // if 조건이 거짓일 때
 * int a = 5, b = 2;
 * if (a < b)
 * {
 * 		// 실행문
 * }
 * 
 * else 문을 포함하는 if 문
 * 
 * 때로는 조건이 참일 때뿐만 아니라 조건이 거짓일 떼에 대응하는 동작도 필요할 수 있다. 
 * 이때 else 키워드를 사용해 다른 코드 블록을 추가할 수 있다. 
 * 
 * else 문을 포함하는 if 문
 * if (조건식)
 * {
 * 		// 실행문 1
 * }
 * else 
 * {
 * 		// 실행문 2
 * }
 * 
 * 1. if 조건식이 참일 때 실행문 1 동작, 실행문 2 무시
 * 2. if 조건식이 거짓일 때 실행문 2 동작, 실행문 1 무시
 * 
 * // if 조건이 참일 떼
 * int a = 5, b = 2;
 * if (a > b)
 * {
 * 		// 실행문 1
 * }
 * else
 * {
 * 		// 실행문 2
 * }
 * 
 * // if 조건이 거짓일 때
 * int a = 5, b = 2;
 * if (a < b)
 * {
 * 		// 실행문 1
 * }
 * else 
 * {
 * 		// 실행문 2
 * }
 */

/**
 * else if 문을 포함하는 if 문
 * 
 * if 문에 또 다른 조건을 가지는 else if 문을 추가하면 실행 흐름을 더 확장할 수도 있다. 
 * 
 * else if 문이 있는 if 문
 * if (조건식)
 * {
 * 		// 실행문 1
 * }
 * else if (조건식 2)
 * {
 * 		// 실행문 2
 * }
 * else 
 * {
 * 		// 실행문 3
 * }
 * 
 * 1. if 조건식 1이 참일 때 실행문 1 동작, else if와 else 문 무시
 * 2. if 조건식 1이 거짓일 때 else if 조건식 2 검사
 * 	2.1. else if 조건식 2 가 참일 때 else if 실행문 2 동작, else 실행문 3 무시
 * 	2.2. else if 조건식 2가 거짓일 때 else 실행문 3 동작, else if 실행문 2 무시
 * 
 * // if 조건이 참일 때
 * int a = 5, b = 2;
 * if (a > b)
 * {
 * 		// 실행문 1
 * }
 * else if (a == b)
 * {
 * 		// 실행문 2
 * }
 * else 
 * {
 * 		// 실행문 3
 * }
 * 
 * // if 조건이 거짓이고 else if 조건이 참일 때
 * int a = 5, b = 2;
 * if (a > b)
 * {
 * 		// 실행문 1
 * }
 * else if (a == b)
 * {
 * 		// 실행문 2
 * }
 * else 
 * {
 * 		// 실행문 3
 * }
 * 
 * // if 조건이 거짓이고 else if 조건도 거짓일 때
 * int a = 2, b = 5;
 * if (a > b)
 * {
 * 		// 실행문 1
 * }
 * else if (a == b)
 * {
 * 		// 실행문 2
 * }
 * else 
 * {
 * 		// 실행문 3
 * }
 * 
 * if를 활용해 입력받은 정수가 어떤 수인지 판단하는 간단한 프로그램을 만들어보자. 
 * 실행 결과를 보면 입력한 수에 따라 정수, 음수, 0으로 구분하여 출력하는 것을 확인할 수 있다. 
 */

#include <iostream>
using namespace std;


int main() {

	int input_number;

	cout << "정수 입력 : ";
	cin >> input_number;

	if (input_number > 0)
	{
		cout << "입력한 수는 양수 입니다." << endl;
	}
	else if (input_number < 0)
	{
		cout << "입력한 수는 음수 입니다." << endl;
	}
	else
	{
		cout << "입력한 수는 0 입니다." << endl;
	}

	return 0;
}

/*
정수 입력: 50
입력한 수는 양수 입니다. 
*/