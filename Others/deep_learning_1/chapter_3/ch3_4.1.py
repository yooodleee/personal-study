#3층 신경망 구현하기(표기법 설명)
'''
신경망에서의 계산을 행렬 계산으로 정리할 수 있다.
신경망 각 층의 계산은 행렬의 곱으로 처리할 수(더 큰 관점에서 생각할 수)있으니,\
세세한 표기 규칙은 잊어버려도 큰 지장은 없다.
'''
#각 층의 신호 전달 구현하기
'''
(w_12)^(1)
1:다음 층의 1번째 뉴런
2:앞 층의 2번째 뉴런
(1): 1층의 가중치

(a_1)^(1)={(w_11)^(1)}*(x_1)+{(w_12)^(1)}*(x_2)+(b_1)^(1)   가중치를 곱한 신호 2개와 편향의 합

행렬의 곱을 적용하면 1층의 '가중치 부분'을 간소화할 수 있다.
A^(1)=XW^(1)+B^(1)

A^(1)={(a_1)^(1) (a_2)^(1) (a_3)^(1)}
X=(x_1 x_2)
B^(1)={(b_1)^(1) (b_2)^(1) (b_3)^(1)}
'''
#넘파이의 다차원 배열-> (입력 신호, 가중치, 편향)
import numpy as np

X=np.array([1.0, 0.5])
W1=np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]])
B1=np.array([0.1, 0.2, 0.3])

print(W1.shape) #(2,3)
print(X.shape)  #(2,)
print(B1.shape) #(3,)

A1=np.dot(X, W1)+B1
print(A1)
#[0.3 0.7 1.1]